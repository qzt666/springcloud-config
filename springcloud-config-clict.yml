server:
  port: 1001
  servlet:
    context-path: /
spring:
  application:
    name: eureka-server1
eureka:
  client:
    #fetch-registry: false      #是否启用湖区注册服务信息，因为这是一个单节点的EurekaServer，不需要同步其他的EurekaServer节点的数据，所以设置为false；
    register-with-eureka: false      #表示是否向eureka注册服务，即在自己的eureka中注册自己，默认为true，此处应该设置为false；
    service-url:
      defaultZone: http://eureka-server2:1002/eureka/,http://eureka-server3:1003/eureka/
  instance:
    hostname: eureka-server1
  server:
    #设为false，关闭自我保护，即Eureka server在云心光器件会去统计心跳失败比例在15分钟之内是否低于85%,如果低于85%，EurekaServer
    #会将这些事例保护起来，让这些事例不会过期，但是在保护器内如果刚哈这个服务提供者非正常下线了，此时服务消费者会拿到一个无效的服务
    #实例，此时调用会失败，对于这个问题需要服务消费者端有一些容错机制，如重试、断路器等；
    #enable-self-preservation: false
    #扫描失效服务的间隔时间（单位是毫秒，摩恩是60*1000)，即60s
    eviction-interval-timer-in-ms: 10000

---
server:
  port: 1002
  servlet:
    context-path: /
spring:
  application:
    name: eureka-server2
eureka:
  client:
    fetch-registry: false      #是否启用湖区注册服务信息，因为这是一个单节点的EurekaServer，不需要同步其他的EurekaServer节点的数据，所以设置为false；
    register-with-eureka: false      #表示是否向eureka注册服务，即在自己的eureka中注册自己，默认为true，此处应该设置为false；
    service-url:
      defaultZone: http://eureka-server1:1001/eureka/,http://eureka-server3:1003/eureka/
  instance:
    hostname: eureka-server2
  server:
    #设为false，关闭自我保护，即Eureka server在云心光器件会去统计心跳失败比例在15分钟之内是否低于85%,如果低于85%，EurekaServer
    #会将这些事例保护起来，让这些事例不会过期，但是在保护器内如果刚哈这个服务提供者非正常下线了，此时服务消费者会拿到一个无效的服务
    #实例，此时调用会失败，对于这个问题需要服务消费者端有一些容错机制，如重试、断路器等；
    #enable-self-preservation: false
    #扫描失效服务的间隔时间（单位是毫秒，摩恩是60*1000)，即60s
    eviction-interval-timer-in-ms: 10000
    
---
server:
  port: 1003
  servlet:
    context-path: /
spring:
  application:
    name: eureka-server3
eureka:
  client:
    fetch-registry: false      #是否启用湖区注册服务信息，因为这是一个单节点的EurekaServer，不需要同步其他的EurekaServer节点的数据，所以设置为false；
    register-with-eureka: false      #表示是否向eureka注册服务，即在自己的eureka中注册自己，默认为true，此处应该设置为false；
    service-url:
      defaultZone: http://eureka-server1:1001/eureka/,http://eureka-server2:1002/eureka/
  instance:
    hostname: eureka-server3
  server:
    #设为false，关闭自我保护，即Eureka server在云心光器件会去统计心跳失败比例在15分钟之内是否低于85%,如果低于85%，EurekaServer
    #会将这些事例保护起来，让这些事例不会过期，但是在保护器内如果刚哈这个服务提供者非正常下线了，此时服务消费者会拿到一个无效的服务
    #实例，此时调用会失败，对于这个问题需要服务消费者端有一些容错机制，如重试、断路器等；
    #enable-self-preservation: false
    #扫描失效服务的间隔时间（单位是毫秒，摩恩是60*1000)，即60s
    eviction-interval-timer-in-ms: 10000